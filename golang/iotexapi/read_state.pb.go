// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/api/read_state.proto

package iotexapi

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ReadStakingData struct {
	// Types that are valid to be assigned to Request:
	//	*ReadStakingData_GetBuckets
	//	*ReadStakingData_GetBucketsByVoter
	//	*ReadStakingData_GetBucketsByCandidate
	//	*ReadStakingData_GetCandidates
	//	*ReadStakingData_GetCandidateByName
	Request              isReadStakingData_Request `protobuf_oneof:"request"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *ReadStakingData) Reset()         { *m = ReadStakingData{} }
func (m *ReadStakingData) String() string { return proto.CompactTextString(m) }
func (*ReadStakingData) ProtoMessage()    {}
func (*ReadStakingData) Descriptor() ([]byte, []int) {
	return fileDescriptor_a08103f271b0c8be, []int{0}
}

func (m *ReadStakingData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadStakingData.Unmarshal(m, b)
}
func (m *ReadStakingData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadStakingData.Marshal(b, m, deterministic)
}
func (m *ReadStakingData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadStakingData.Merge(m, src)
}
func (m *ReadStakingData) XXX_Size() int {
	return xxx_messageInfo_ReadStakingData.Size(m)
}
func (m *ReadStakingData) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadStakingData.DiscardUnknown(m)
}

var xxx_messageInfo_ReadStakingData proto.InternalMessageInfo

type isReadStakingData_Request interface {
	isReadStakingData_Request()
}

type ReadStakingData_GetBuckets struct {
	GetBuckets *ReadStakingVoteBuckets `protobuf:"bytes,1,opt,name=getBuckets,proto3,oneof"`
}

type ReadStakingData_GetBucketsByVoter struct {
	GetBucketsByVoter *ReadStakingVoteBucketsByVoter `protobuf:"bytes,2,opt,name=getBucketsByVoter,proto3,oneof"`
}

type ReadStakingData_GetBucketsByCandidate struct {
	GetBucketsByCandidate *ReadStakingVoteBucketsByCandidate `protobuf:"bytes,3,opt,name=getBucketsByCandidate,proto3,oneof"`
}

type ReadStakingData_GetCandidates struct {
	GetCandidates *ReadStakingCandidates `protobuf:"bytes,4,opt,name=getCandidates,proto3,oneof"`
}

type ReadStakingData_GetCandidateByName struct {
	GetCandidateByName *ReadStakingCandidateByName `protobuf:"bytes,5,opt,name=getCandidateByName,proto3,oneof"`
}

func (*ReadStakingData_GetBuckets) isReadStakingData_Request() {}

func (*ReadStakingData_GetBucketsByVoter) isReadStakingData_Request() {}

func (*ReadStakingData_GetBucketsByCandidate) isReadStakingData_Request() {}

func (*ReadStakingData_GetCandidates) isReadStakingData_Request() {}

func (*ReadStakingData_GetCandidateByName) isReadStakingData_Request() {}

func (m *ReadStakingData) GetRequest() isReadStakingData_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *ReadStakingData) GetGetBuckets() *ReadStakingVoteBuckets {
	if x, ok := m.GetRequest().(*ReadStakingData_GetBuckets); ok {
		return x.GetBuckets
	}
	return nil
}

func (m *ReadStakingData) GetGetBucketsByVoter() *ReadStakingVoteBucketsByVoter {
	if x, ok := m.GetRequest().(*ReadStakingData_GetBucketsByVoter); ok {
		return x.GetBucketsByVoter
	}
	return nil
}

func (m *ReadStakingData) GetGetBucketsByCandidate() *ReadStakingVoteBucketsByCandidate {
	if x, ok := m.GetRequest().(*ReadStakingData_GetBucketsByCandidate); ok {
		return x.GetBucketsByCandidate
	}
	return nil
}

func (m *ReadStakingData) GetGetCandidates() *ReadStakingCandidates {
	if x, ok := m.GetRequest().(*ReadStakingData_GetCandidates); ok {
		return x.GetCandidates
	}
	return nil
}

func (m *ReadStakingData) GetGetCandidateByName() *ReadStakingCandidateByName {
	if x, ok := m.GetRequest().(*ReadStakingData_GetCandidateByName); ok {
		return x.GetCandidateByName
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ReadStakingData) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ReadStakingData_GetBuckets)(nil),
		(*ReadStakingData_GetBucketsByVoter)(nil),
		(*ReadStakingData_GetBucketsByCandidate)(nil),
		(*ReadStakingData_GetCandidates)(nil),
		(*ReadStakingData_GetCandidateByName)(nil),
	}
}

type ReadStakingVoteBuckets struct {
	Offset               uint32   `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                uint32   `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadStakingVoteBuckets) Reset()         { *m = ReadStakingVoteBuckets{} }
func (m *ReadStakingVoteBuckets) String() string { return proto.CompactTextString(m) }
func (*ReadStakingVoteBuckets) ProtoMessage()    {}
func (*ReadStakingVoteBuckets) Descriptor() ([]byte, []int) {
	return fileDescriptor_a08103f271b0c8be, []int{1}
}

func (m *ReadStakingVoteBuckets) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadStakingVoteBuckets.Unmarshal(m, b)
}
func (m *ReadStakingVoteBuckets) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadStakingVoteBuckets.Marshal(b, m, deterministic)
}
func (m *ReadStakingVoteBuckets) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadStakingVoteBuckets.Merge(m, src)
}
func (m *ReadStakingVoteBuckets) XXX_Size() int {
	return xxx_messageInfo_ReadStakingVoteBuckets.Size(m)
}
func (m *ReadStakingVoteBuckets) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadStakingVoteBuckets.DiscardUnknown(m)
}

var xxx_messageInfo_ReadStakingVoteBuckets proto.InternalMessageInfo

func (m *ReadStakingVoteBuckets) GetOffset() uint32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ReadStakingVoteBuckets) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type ReadStakingVoteBucketsByVoter struct {
	VoterAddress         string   `protobuf:"bytes,1,opt,name=voterAddress,proto3" json:"voterAddress,omitempty"`
	Offset               uint32   `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                uint32   `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadStakingVoteBucketsByVoter) Reset()         { *m = ReadStakingVoteBucketsByVoter{} }
func (m *ReadStakingVoteBucketsByVoter) String() string { return proto.CompactTextString(m) }
func (*ReadStakingVoteBucketsByVoter) ProtoMessage()    {}
func (*ReadStakingVoteBucketsByVoter) Descriptor() ([]byte, []int) {
	return fileDescriptor_a08103f271b0c8be, []int{2}
}

func (m *ReadStakingVoteBucketsByVoter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadStakingVoteBucketsByVoter.Unmarshal(m, b)
}
func (m *ReadStakingVoteBucketsByVoter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadStakingVoteBucketsByVoter.Marshal(b, m, deterministic)
}
func (m *ReadStakingVoteBucketsByVoter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadStakingVoteBucketsByVoter.Merge(m, src)
}
func (m *ReadStakingVoteBucketsByVoter) XXX_Size() int {
	return xxx_messageInfo_ReadStakingVoteBucketsByVoter.Size(m)
}
func (m *ReadStakingVoteBucketsByVoter) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadStakingVoteBucketsByVoter.DiscardUnknown(m)
}

var xxx_messageInfo_ReadStakingVoteBucketsByVoter proto.InternalMessageInfo

func (m *ReadStakingVoteBucketsByVoter) GetVoterAddress() string {
	if m != nil {
		return m.VoterAddress
	}
	return ""
}

func (m *ReadStakingVoteBucketsByVoter) GetOffset() uint32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ReadStakingVoteBucketsByVoter) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type ReadStakingVoteBucketsByCandidate struct {
	CandName             string   `protobuf:"bytes,1,opt,name=candName,proto3" json:"candName,omitempty"`
	Offset               uint32   `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                uint32   `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadStakingVoteBucketsByCandidate) Reset()         { *m = ReadStakingVoteBucketsByCandidate{} }
func (m *ReadStakingVoteBucketsByCandidate) String() string { return proto.CompactTextString(m) }
func (*ReadStakingVoteBucketsByCandidate) ProtoMessage()    {}
func (*ReadStakingVoteBucketsByCandidate) Descriptor() ([]byte, []int) {
	return fileDescriptor_a08103f271b0c8be, []int{3}
}

func (m *ReadStakingVoteBucketsByCandidate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadStakingVoteBucketsByCandidate.Unmarshal(m, b)
}
func (m *ReadStakingVoteBucketsByCandidate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadStakingVoteBucketsByCandidate.Marshal(b, m, deterministic)
}
func (m *ReadStakingVoteBucketsByCandidate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadStakingVoteBucketsByCandidate.Merge(m, src)
}
func (m *ReadStakingVoteBucketsByCandidate) XXX_Size() int {
	return xxx_messageInfo_ReadStakingVoteBucketsByCandidate.Size(m)
}
func (m *ReadStakingVoteBucketsByCandidate) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadStakingVoteBucketsByCandidate.DiscardUnknown(m)
}

var xxx_messageInfo_ReadStakingVoteBucketsByCandidate proto.InternalMessageInfo

func (m *ReadStakingVoteBucketsByCandidate) GetCandName() string {
	if m != nil {
		return m.CandName
	}
	return ""
}

func (m *ReadStakingVoteBucketsByCandidate) GetOffset() uint32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ReadStakingVoteBucketsByCandidate) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type ReadStakingCandidates struct {
	Offset               uint32   `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit                uint32   `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadStakingCandidates) Reset()         { *m = ReadStakingCandidates{} }
func (m *ReadStakingCandidates) String() string { return proto.CompactTextString(m) }
func (*ReadStakingCandidates) ProtoMessage()    {}
func (*ReadStakingCandidates) Descriptor() ([]byte, []int) {
	return fileDescriptor_a08103f271b0c8be, []int{4}
}

func (m *ReadStakingCandidates) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadStakingCandidates.Unmarshal(m, b)
}
func (m *ReadStakingCandidates) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadStakingCandidates.Marshal(b, m, deterministic)
}
func (m *ReadStakingCandidates) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadStakingCandidates.Merge(m, src)
}
func (m *ReadStakingCandidates) XXX_Size() int {
	return xxx_messageInfo_ReadStakingCandidates.Size(m)
}
func (m *ReadStakingCandidates) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadStakingCandidates.DiscardUnknown(m)
}

var xxx_messageInfo_ReadStakingCandidates proto.InternalMessageInfo

func (m *ReadStakingCandidates) GetOffset() uint32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ReadStakingCandidates) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type ReadStakingCandidateByName struct {
	CandName             string   `protobuf:"bytes,1,opt,name=candName,proto3" json:"candName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadStakingCandidateByName) Reset()         { *m = ReadStakingCandidateByName{} }
func (m *ReadStakingCandidateByName) String() string { return proto.CompactTextString(m) }
func (*ReadStakingCandidateByName) ProtoMessage()    {}
func (*ReadStakingCandidateByName) Descriptor() ([]byte, []int) {
	return fileDescriptor_a08103f271b0c8be, []int{5}
}

func (m *ReadStakingCandidateByName) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadStakingCandidateByName.Unmarshal(m, b)
}
func (m *ReadStakingCandidateByName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadStakingCandidateByName.Marshal(b, m, deterministic)
}
func (m *ReadStakingCandidateByName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadStakingCandidateByName.Merge(m, src)
}
func (m *ReadStakingCandidateByName) XXX_Size() int {
	return xxx_messageInfo_ReadStakingCandidateByName.Size(m)
}
func (m *ReadStakingCandidateByName) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadStakingCandidateByName.DiscardUnknown(m)
}

var xxx_messageInfo_ReadStakingCandidateByName proto.InternalMessageInfo

func (m *ReadStakingCandidateByName) GetCandName() string {
	if m != nil {
		return m.CandName
	}
	return ""
}

func init() {
	proto.RegisterType((*ReadStakingData)(nil), "iotexapi.ReadStakingData")
	proto.RegisterType((*ReadStakingVoteBuckets)(nil), "iotexapi.ReadStakingVoteBuckets")
	proto.RegisterType((*ReadStakingVoteBucketsByVoter)(nil), "iotexapi.ReadStakingVoteBucketsByVoter")
	proto.RegisterType((*ReadStakingVoteBucketsByCandidate)(nil), "iotexapi.ReadStakingVoteBucketsByCandidate")
	proto.RegisterType((*ReadStakingCandidates)(nil), "iotexapi.ReadStakingCandidates")
	proto.RegisterType((*ReadStakingCandidateByName)(nil), "iotexapi.ReadStakingCandidateByName")
}

func init() { proto.RegisterFile("proto/api/read_state.proto", fileDescriptor_a08103f271b0c8be) }

var fileDescriptor_a08103f271b0c8be = []byte{
	// 373 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x93, 0x4d, 0x4b, 0xf3, 0x40,
	0x14, 0x85, 0xd3, 0xf6, 0x6d, 0xdf, 0xf6, 0x6a, 0x11, 0x07, 0x5b, 0x42, 0x41, 0xac, 0x41, 0x50,
	0x10, 0x13, 0xb0, 0x08, 0x6e, 0x8d, 0x5f, 0x59, 0xb9, 0x18, 0xa1, 0x82, 0x1b, 0x99, 0x26, 0xd3,
	0x38, 0xb6, 0xc9, 0xa4, 0xc9, 0xad, 0xd8, 0x5f, 0xe7, 0x5f, 0x93, 0x4e, 0xfa, 0x91, 0x62, 0x6c,
	0xe9, 0x2e, 0xe7, 0x72, 0xee, 0x73, 0x92, 0x39, 0x13, 0x68, 0x45, 0xb1, 0x44, 0x69, 0xb1, 0x48,
	0x58, 0x31, 0x67, 0xde, 0x5b, 0x82, 0x0c, 0xb9, 0xa9, 0x86, 0xa4, 0x2a, 0x24, 0xf2, 0x2f, 0x16,
	0x09, 0xe3, 0xbb, 0x04, 0x7b, 0x94, 0x33, 0xef, 0x19, 0xd9, 0x40, 0x84, 0xfe, 0x1d, 0x43, 0x46,
	0x6c, 0x00, 0x9f, 0xa3, 0x3d, 0x76, 0x07, 0x1c, 0x13, 0xbd, 0xd0, 0x2e, 0x9c, 0xed, 0x5c, 0xb6,
	0xcd, 0xf9, 0x8a, 0x99, 0xb1, 0x77, 0x25, 0xf2, 0x99, 0xcf, 0xd1, 0x68, 0x66, 0x8b, 0xbc, 0xc0,
	0xfe, 0x52, 0xd9, 0x93, 0xa9, 0x31, 0xd6, 0x8b, 0x0a, 0x75, 0xba, 0x09, 0x35, 0xb3, 0x3b, 0x1a,
	0xfd, 0xcd, 0x20, 0x2e, 0x34, 0xb2, 0xc3, 0x5b, 0x16, 0x7a, 0xc2, 0x63, 0xc8, 0xf5, 0x92, 0x82,
	0x9f, 0x6f, 0x86, 0x2f, 0x56, 0x1c, 0x8d, 0xe6, 0xb3, 0xc8, 0x23, 0xd4, 0x7d, 0x8e, 0x0b, 0x9d,
	0xe8, 0xff, 0x14, 0xfc, 0x28, 0x17, 0xbe, 0xb4, 0x39, 0x1a, 0x5d, 0xdd, 0x23, 0x5d, 0x20, 0xd9,
	0x81, 0x3d, 0x79, 0x62, 0x01, 0xd7, 0xcb, 0x8a, 0x76, 0xb2, 0x9e, 0x96, 0x7a, 0x1d, 0x8d, 0xe6,
	0x10, 0xec, 0x1a, 0xfc, 0x8f, 0xf9, 0x68, 0xcc, 0x13, 0x34, 0x1e, 0xa0, 0x99, 0xff, 0xa5, 0xa4,
	0x09, 0x15, 0xd9, 0xef, 0x27, 0x1c, 0x55, 0x87, 0x75, 0x3a, 0x53, 0xe4, 0x00, 0xca, 0x43, 0x11,
	0x08, 0x54, 0x7d, 0xd4, 0x69, 0x2a, 0x8c, 0x11, 0x1c, 0xae, 0xad, 0x83, 0x18, 0xb0, 0xfb, 0x39,
	0x7d, 0xb8, 0xf1, 0xbc, 0x98, 0x27, 0xe9, 0xc5, 0xa8, 0xd1, 0x95, 0x59, 0x26, 0xb2, 0x98, 0x1f,
	0x59, 0xca, 0x46, 0x06, 0x70, 0xbc, 0xb1, 0x24, 0xd2, 0x82, 0xaa, 0xcb, 0x42, 0x4f, 0x1d, 0x5c,
	0x1a, 0xb9, 0xd0, 0x5b, 0xc6, 0xdd, 0x43, 0x23, 0xb7, 0xb6, 0x2d, 0x0f, 0xea, 0x1a, 0x5a, 0x7f,
	0xf7, 0xb5, 0xee, 0x75, 0xed, 0xab, 0xd7, 0x8e, 0x2f, 0xf0, 0x7d, 0xdc, 0x33, 0x5d, 0x19, 0x58,
	0xaa, 0xfd, 0x28, 0x96, 0x1f, 0xdc, 0xc5, 0x54, 0x5c, 0xa4, 0xbf, 0xac, 0x2f, 0x87, 0x2c, 0xf4,
	0xad, 0xf9, 0xed, 0xe8, 0x55, 0xd4, 0xb8, 0xf3, 0x13, 0x00, 0x00, 0xff, 0xff, 0x8b, 0x98, 0x19,
	0x0b, 0xd2, 0x03, 0x00, 0x00,
}
