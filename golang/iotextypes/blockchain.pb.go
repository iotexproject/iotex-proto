// Copyright (c) 2018 IoTeX
// This is an alpha (internal) release and is not suitable for production. This source code is provided 'as is' and no
// warranties are given as to title or non-infringement, merchantability or fitness for purpose and, to the extent
// permitted by law, all liability for your use of the code is disclaimed. This source code is governed by Apache
// License 2.0 that can be found in the LICENSE file.

// To compile the proto, run:
//      protoc --go_out=plugins=grpc:$GOPATH/src *.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.1
// source: proto/types/blockchain.proto

package iotextypes

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// header of a block
type BlockHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Core           *BlockHeaderCore `protobuf:"bytes,1,opt,name=core,proto3" json:"core,omitempty"`
	ProducerPubkey []byte           `protobuf:"bytes,2,opt,name=producerPubkey,proto3" json:"producerPubkey,omitempty"`
	Signature      []byte           `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *BlockHeader) Reset() {
	*x = BlockHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_blockchain_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockHeader) ProtoMessage() {}

func (x *BlockHeader) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_blockchain_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockHeader.ProtoReflect.Descriptor instead.
func (*BlockHeader) Descriptor() ([]byte, []int) {
	return file_proto_types_blockchain_proto_rawDescGZIP(), []int{0}
}

func (x *BlockHeader) GetCore() *BlockHeaderCore {
	if x != nil {
		return x.Core
	}
	return nil
}

func (x *BlockHeader) GetProducerPubkey() []byte {
	if x != nil {
		return x.ProducerPubkey
	}
	return nil
}

func (x *BlockHeader) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type BlockHeaderCore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version          uint32                 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	Height           uint64                 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Timestamp        *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	PrevBlockHash    []byte                 `protobuf:"bytes,4,opt,name=prevBlockHash,proto3" json:"prevBlockHash,omitempty"`
	TxRoot           []byte                 `protobuf:"bytes,5,opt,name=txRoot,proto3" json:"txRoot,omitempty"`
	DeltaStateDigest []byte                 `protobuf:"bytes,6,opt,name=deltaStateDigest,proto3" json:"deltaStateDigest,omitempty"`
	ReceiptRoot      []byte                 `protobuf:"bytes,7,opt,name=receiptRoot,proto3" json:"receiptRoot,omitempty"`
	LogsBloom        []byte                 `protobuf:"bytes,8,opt,name=logsBloom,proto3" json:"logsBloom,omitempty"`
	GasUsed          uint64                 `protobuf:"varint,9,opt,name=gasUsed,proto3" json:"gasUsed,omitempty"`
	BaseFee          []byte                 `protobuf:"bytes,10,opt,name=baseFee,proto3" json:"baseFee,omitempty"`
	BlobGasUsed      uint64                 `protobuf:"varint,11,opt,name=blobGasUsed,proto3" json:"blobGasUsed,omitempty"`
	ExcessBlobGas    uint64                 `protobuf:"varint,12,opt,name=excessBlobGas,proto3" json:"excessBlobGas,omitempty"`
}

func (x *BlockHeaderCore) Reset() {
	*x = BlockHeaderCore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_blockchain_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockHeaderCore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockHeaderCore) ProtoMessage() {}

func (x *BlockHeaderCore) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_blockchain_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockHeaderCore.ProtoReflect.Descriptor instead.
func (*BlockHeaderCore) Descriptor() ([]byte, []int) {
	return file_proto_types_blockchain_proto_rawDescGZIP(), []int{1}
}

func (x *BlockHeaderCore) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *BlockHeaderCore) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *BlockHeaderCore) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *BlockHeaderCore) GetPrevBlockHash() []byte {
	if x != nil {
		return x.PrevBlockHash
	}
	return nil
}

func (x *BlockHeaderCore) GetTxRoot() []byte {
	if x != nil {
		return x.TxRoot
	}
	return nil
}

func (x *BlockHeaderCore) GetDeltaStateDigest() []byte {
	if x != nil {
		return x.DeltaStateDigest
	}
	return nil
}

func (x *BlockHeaderCore) GetReceiptRoot() []byte {
	if x != nil {
		return x.ReceiptRoot
	}
	return nil
}

func (x *BlockHeaderCore) GetLogsBloom() []byte {
	if x != nil {
		return x.LogsBloom
	}
	return nil
}

func (x *BlockHeaderCore) GetGasUsed() uint64 {
	if x != nil {
		return x.GasUsed
	}
	return 0
}

func (x *BlockHeaderCore) GetBaseFee() []byte {
	if x != nil {
		return x.BaseFee
	}
	return nil
}

func (x *BlockHeaderCore) GetBlobGasUsed() uint64 {
	if x != nil {
		return x.BlobGasUsed
	}
	return 0
}

func (x *BlockHeaderCore) GetExcessBlobGas() uint64 {
	if x != nil {
		return x.ExcessBlobGas
	}
	return 0
}

// footer of a block
type BlockFooter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Endorsements []*Endorsement         `protobuf:"bytes,1,rep,name=endorsements,proto3" json:"endorsements,omitempty"`
	Timestamp    *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *BlockFooter) Reset() {
	*x = BlockFooter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_blockchain_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockFooter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockFooter) ProtoMessage() {}

func (x *BlockFooter) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_blockchain_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockFooter.ProtoReflect.Descriptor instead.
func (*BlockFooter) Descriptor() ([]byte, []int) {
	return file_proto_types_blockchain_proto_rawDescGZIP(), []int{2}
}

func (x *BlockFooter) GetEndorsements() []*Endorsement {
	if x != nil {
		return x.Endorsements
	}
	return nil
}

func (x *BlockFooter) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

// body of a block
type BlockBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Actions []*Action `protobuf:"bytes,1,rep,name=actions,proto3" json:"actions,omitempty"`
}

func (x *BlockBody) Reset() {
	*x = BlockBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_blockchain_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockBody) ProtoMessage() {}

func (x *BlockBody) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_blockchain_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockBody.ProtoReflect.Descriptor instead.
func (*BlockBody) Descriptor() ([]byte, []int) {
	return file_proto_types_blockchain_proto_rawDescGZIP(), []int{3}
}

func (x *BlockBody) GetActions() []*Action {
	if x != nil {
		return x.Actions
	}
	return nil
}

// block consists of header followed by transactions
// hash of current block can be computed from header hence not stored
type Block struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *BlockHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Body   *BlockBody   `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	Footer *BlockFooter `protobuf:"bytes,3,opt,name=footer,proto3" json:"footer,omitempty"`
}

func (x *Block) Reset() {
	*x = Block{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_blockchain_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Block) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block) ProtoMessage() {}

func (x *Block) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_blockchain_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block.ProtoReflect.Descriptor instead.
func (*Block) Descriptor() ([]byte, []int) {
	return file_proto_types_blockchain_proto_rawDescGZIP(), []int{4}
}

func (x *Block) GetHeader() *BlockHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *Block) GetBody() *BlockBody {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *Block) GetFooter() *BlockFooter {
	if x != nil {
		return x.Footer
	}
	return nil
}

// Receipts consists of a collection of recepit
type Receipts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Receipts []*Receipt `protobuf:"bytes,1,rep,name=receipts,proto3" json:"receipts,omitempty"`
}

func (x *Receipts) Reset() {
	*x = Receipts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_blockchain_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Receipts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Receipts) ProtoMessage() {}

func (x *Receipts) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_blockchain_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Receipts.ProtoReflect.Descriptor instead.
func (*Receipts) Descriptor() ([]byte, []int) {
	return file_proto_types_blockchain_proto_rawDescGZIP(), []int{5}
}

func (x *Receipts) GetReceipts() []*Receipt {
	if x != nil {
		return x.Receipts
	}
	return nil
}

type EpochData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Num                     uint64 `protobuf:"varint,1,opt,name=num,proto3" json:"num,omitempty"`
	Height                  uint64 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	GravityChainStartHeight uint64 `protobuf:"varint,3,opt,name=gravityChainStartHeight,proto3" json:"gravityChainStartHeight,omitempty"`
}

func (x *EpochData) Reset() {
	*x = EpochData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_blockchain_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EpochData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EpochData) ProtoMessage() {}

func (x *EpochData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_blockchain_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EpochData.ProtoReflect.Descriptor instead.
func (*EpochData) Descriptor() ([]byte, []int) {
	return file_proto_types_blockchain_proto_rawDescGZIP(), []int{6}
}

func (x *EpochData) GetNum() uint64 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *EpochData) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *EpochData) GetGravityChainStartHeight() uint64 {
	if x != nil {
		return x.GravityChainStartHeight
	}
	return 0
}

// Blockchain Metadata
type ChainMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height     uint64     `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	NumActions int64      `protobuf:"varint,2,opt,name=numActions,proto3" json:"numActions,omitempty"`
	Tps        int64      `protobuf:"varint,3,opt,name=tps,proto3" json:"tps,omitempty"`
	Epoch      *EpochData `protobuf:"bytes,4,opt,name=epoch,proto3" json:"epoch,omitempty"`
	TpsFloat   float32    `protobuf:"fixed32,5,opt,name=tpsFloat,proto3" json:"tpsFloat,omitempty"`
	ChainID    uint32     `protobuf:"varint,6,opt,name=chainID,proto3" json:"chainID,omitempty"`
}

func (x *ChainMeta) Reset() {
	*x = ChainMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_blockchain_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChainMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChainMeta) ProtoMessage() {}

func (x *ChainMeta) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_blockchain_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChainMeta.ProtoReflect.Descriptor instead.
func (*ChainMeta) Descriptor() ([]byte, []int) {
	return file_proto_types_blockchain_proto_rawDescGZIP(), []int{7}
}

func (x *ChainMeta) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *ChainMeta) GetNumActions() int64 {
	if x != nil {
		return x.NumActions
	}
	return 0
}

func (x *ChainMeta) GetTps() int64 {
	if x != nil {
		return x.Tps
	}
	return 0
}

func (x *ChainMeta) GetEpoch() *EpochData {
	if x != nil {
		return x.Epoch
	}
	return nil
}

func (x *ChainMeta) GetTpsFloat() float32 {
	if x != nil {
		return x.TpsFloat
	}
	return 0
}

func (x *ChainMeta) GetChainID() uint32 {
	if x != nil {
		return x.ChainID
	}
	return 0
}

// Block Metadata
type BlockMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash              string                 `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Height            uint64                 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Timestamp         *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	NumActions        int64                  `protobuf:"varint,4,opt,name=numActions,proto3" json:"numActions,omitempty"`
	ProducerAddress   string                 `protobuf:"bytes,5,opt,name=producerAddress,proto3" json:"producerAddress,omitempty"`
	TransferAmount    string                 `protobuf:"bytes,6,opt,name=transferAmount,proto3" json:"transferAmount,omitempty"`
	TxRoot            string                 `protobuf:"bytes,7,opt,name=txRoot,proto3" json:"txRoot,omitempty"`
	ReceiptRoot       string                 `protobuf:"bytes,8,opt,name=receiptRoot,proto3" json:"receiptRoot,omitempty"`
	DeltaStateDigest  string                 `protobuf:"bytes,9,opt,name=deltaStateDigest,proto3" json:"deltaStateDigest,omitempty"`
	LogsBloom         string                 `protobuf:"bytes,10,opt,name=logsBloom,proto3" json:"logsBloom,omitempty"`
	PreviousBlockHash string                 `protobuf:"bytes,11,opt,name=previousBlockHash,proto3" json:"previousBlockHash,omitempty"`
	GasLimit          uint64                 `protobuf:"varint,12,opt,name=gasLimit,proto3" json:"gasLimit,omitempty"`
	GasUsed           uint64                 `protobuf:"varint,13,opt,name=gasUsed,proto3" json:"gasUsed,omitempty"`
}

func (x *BlockMeta) Reset() {
	*x = BlockMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_blockchain_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockMeta) ProtoMessage() {}

func (x *BlockMeta) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_blockchain_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockMeta.ProtoReflect.Descriptor instead.
func (*BlockMeta) Descriptor() ([]byte, []int) {
	return file_proto_types_blockchain_proto_rawDescGZIP(), []int{8}
}

func (x *BlockMeta) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *BlockMeta) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *BlockMeta) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *BlockMeta) GetNumActions() int64 {
	if x != nil {
		return x.NumActions
	}
	return 0
}

func (x *BlockMeta) GetProducerAddress() string {
	if x != nil {
		return x.ProducerAddress
	}
	return ""
}

func (x *BlockMeta) GetTransferAmount() string {
	if x != nil {
		return x.TransferAmount
	}
	return ""
}

func (x *BlockMeta) GetTxRoot() string {
	if x != nil {
		return x.TxRoot
	}
	return ""
}

func (x *BlockMeta) GetReceiptRoot() string {
	if x != nil {
		return x.ReceiptRoot
	}
	return ""
}

func (x *BlockMeta) GetDeltaStateDigest() string {
	if x != nil {
		return x.DeltaStateDigest
	}
	return ""
}

func (x *BlockMeta) GetLogsBloom() string {
	if x != nil {
		return x.LogsBloom
	}
	return ""
}

func (x *BlockMeta) GetPreviousBlockHash() string {
	if x != nil {
		return x.PreviousBlockHash
	}
	return ""
}

func (x *BlockMeta) GetGasLimit() uint64 {
	if x != nil {
		return x.GasLimit
	}
	return 0
}

func (x *BlockMeta) GetGasUsed() uint64 {
	if x != nil {
		return x.GasUsed
	}
	return 0
}

// BlockIdentifier Metadata
type BlockIdentifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash   string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Height uint64 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *BlockIdentifier) Reset() {
	*x = BlockIdentifier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_blockchain_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockIdentifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockIdentifier) ProtoMessage() {}

func (x *BlockIdentifier) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_blockchain_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockIdentifier.ProtoReflect.Descriptor instead.
func (*BlockIdentifier) Descriptor() ([]byte, []int) {
	return file_proto_types_blockchain_proto_rawDescGZIP(), []int{9}
}

func (x *BlockIdentifier) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *BlockIdentifier) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

// Account Metadata
type AccountMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address          string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Balance          string `protobuf:"bytes,2,opt,name=balance,proto3" json:"balance,omitempty"`
	Nonce            uint64 `protobuf:"varint,3,opt,name=nonce,proto3" json:"nonce,omitempty"`
	PendingNonce     uint64 `protobuf:"varint,4,opt,name=pendingNonce,proto3" json:"pendingNonce,omitempty"`
	NumActions       uint64 `protobuf:"varint,5,opt,name=numActions,proto3" json:"numActions,omitempty"`
	IsContract       bool   `protobuf:"varint,6,opt,name=isContract,proto3" json:"isContract,omitempty"`
	ContractByteCode []byte `protobuf:"bytes,7,opt,name=contractByteCode,proto3" json:"contractByteCode,omitempty"`
}

func (x *AccountMeta) Reset() {
	*x = AccountMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_blockchain_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountMeta) ProtoMessage() {}

func (x *AccountMeta) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_blockchain_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountMeta.ProtoReflect.Descriptor instead.
func (*AccountMeta) Descriptor() ([]byte, []int) {
	return file_proto_types_blockchain_proto_rawDescGZIP(), []int{10}
}

func (x *AccountMeta) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *AccountMeta) GetBalance() string {
	if x != nil {
		return x.Balance
	}
	return ""
}

func (x *AccountMeta) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *AccountMeta) GetPendingNonce() uint64 {
	if x != nil {
		return x.PendingNonce
	}
	return 0
}

func (x *AccountMeta) GetNumActions() uint64 {
	if x != nil {
		return x.NumActions
	}
	return 0
}

func (x *AccountMeta) GetIsContract() bool {
	if x != nil {
		return x.IsContract
	}
	return false
}

func (x *AccountMeta) GetContractByteCode() []byte {
	if x != nil {
		return x.ContractByteCode
	}
	return nil
}

type BlockStore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Block    *Block     `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
	Receipts []*Receipt `protobuf:"bytes,2,rep,name=receipts,proto3" json:"receipts,omitempty"`
}

func (x *BlockStore) Reset() {
	*x = BlockStore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_blockchain_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockStore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockStore) ProtoMessage() {}

func (x *BlockStore) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_blockchain_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockStore.ProtoReflect.Descriptor instead.
func (*BlockStore) Descriptor() ([]byte, []int) {
	return file_proto_types_blockchain_proto_rawDescGZIP(), []int{11}
}

func (x *BlockStore) GetBlock() *Block {
	if x != nil {
		return x.Block
	}
	return nil
}

func (x *BlockStore) GetReceipts() []*Receipt {
	if x != nil {
		return x.Receipts
	}
	return nil
}

type BlockStores struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockStores []*BlockStore `protobuf:"bytes,1,rep,name=blockStores,proto3" json:"blockStores,omitempty"`
}

func (x *BlockStores) Reset() {
	*x = BlockStores{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_blockchain_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockStores) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockStores) ProtoMessage() {}

func (x *BlockStores) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_blockchain_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockStores.ProtoReflect.Descriptor instead.
func (*BlockStores) Descriptor() ([]byte, []int) {
	return file_proto_types_blockchain_proto_rawDescGZIP(), []int{12}
}

func (x *BlockStores) GetBlockStores() []*BlockStore {
	if x != nil {
		return x.BlockStores
	}
	return nil
}

var File_proto_types_blockchain_proto protoreflect.FileDescriptor

var file_proto_types_blockchain_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a,
	0x69, 0x6f, 0x74, 0x65, 0x78, 0x74, 0x79, 0x70, 0x65, 0x73, 0x1a, 0x18, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2f, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x84, 0x01, 0x0a, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x04, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x69, 0x6f, 0x74, 0x65, 0x78, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x72, 0x65, 0x52,
	0x04, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65,
	0x72, 0x50, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0xa3, 0x03, 0x0a, 0x0f,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x72, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x24, 0x0a, 0x0d, 0x70,
	0x72, 0x65, 0x76, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0d, 0x70, 0x72, 0x65, 0x76, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73,
	0x68, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x78, 0x52, 0x6f, 0x6f, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x06, 0x74, 0x78, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x64, 0x65, 0x6c,
	0x74, 0x61, 0x53, 0x74, 0x61, 0x74, 0x65, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x10, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x53, 0x74, 0x61, 0x74, 0x65, 0x44,
	0x69, 0x67, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74,
	0x52, 0x6f, 0x6f, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x70, 0x74, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x73, 0x42,
	0x6c, 0x6f, 0x6f, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x73,
	0x42, 0x6c, 0x6f, 0x6f, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x61, 0x73, 0x55, 0x73, 0x65, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x67, 0x61, 0x73, 0x55, 0x73, 0x65, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x62, 0x61, 0x73, 0x65, 0x46, 0x65, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x07, 0x62, 0x61, 0x73, 0x65, 0x46, 0x65, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x6c, 0x6f,
	0x62, 0x47, 0x61, 0x73, 0x55, 0x73, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b,
	0x62, 0x6c, 0x6f, 0x62, 0x47, 0x61, 0x73, 0x55, 0x73, 0x65, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x65,
	0x78, 0x63, 0x65, 0x73, 0x73, 0x42, 0x6c, 0x6f, 0x62, 0x47, 0x61, 0x73, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0d, 0x65, 0x78, 0x63, 0x65, 0x73, 0x73, 0x42, 0x6c, 0x6f, 0x62, 0x47, 0x61,
	0x73, 0x22, 0x84, 0x01, 0x0a, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x46, 0x6f, 0x6f, 0x74, 0x65,
	0x72, 0x12, 0x3b, 0x0a, 0x0c, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x69, 0x6f, 0x74, 0x65, 0x78, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x45, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x0c, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x38,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x39, 0x0a, 0x09, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x2c, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x69, 0x6f, 0x74, 0x65, 0x78, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x22, 0x94, 0x01, 0x0a, 0x05, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x2f, 0x0a,
	0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x69, 0x6f, 0x74, 0x65, 0x78, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x29,
	0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x69,
	0x6f, 0x74, 0x65, 0x78, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42,
	0x6f, 0x64, 0x79, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x2f, 0x0a, 0x06, 0x66, 0x6f, 0x6f,
	0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x69, 0x6f, 0x74, 0x65,
	0x78, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x46, 0x6f, 0x6f, 0x74,
	0x65, 0x72, 0x52, 0x06, 0x66, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x22, 0x3b, 0x0a, 0x08, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x70, 0x74, 0x73, 0x12, 0x2f, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x6f, 0x74, 0x65, 0x78,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x52, 0x08, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x73, 0x22, 0x6f, 0x0a, 0x09, 0x45, 0x70, 0x6f, 0x63, 0x68,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x38,
	0x0a, 0x17, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x17, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0xb8, 0x01, 0x0a, 0x09, 0x43, 0x68, 0x61,
	0x69, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x6e, 0x75, 0x6d, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x6e, 0x75, 0x6d, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x10,
	0x0a, 0x03, 0x74, 0x70, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x74, 0x70, 0x73,
	0x12, 0x2b, 0x0a, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x69, 0x6f, 0x74, 0x65, 0x78, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x45, 0x70, 0x6f,
	0x63, 0x68, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x1a, 0x0a,
	0x08, 0x74, 0x70, 0x73, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x08, 0x74, 0x70, 0x73, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x49, 0x44, 0x22, 0xcb, 0x03, 0x0a, 0x09, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4d, 0x65, 0x74,
	0x61, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x38, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x75, 0x6d, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6e, 0x75, 0x6d,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x78, 0x52,
	0x6f, 0x6f, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x78, 0x52, 0x6f, 0x6f,
	0x74, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x52, 0x6f, 0x6f, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x52,
	0x6f, 0x6f, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64,
	0x65, 0x6c, 0x74, 0x61, 0x53, 0x74, 0x61, 0x74, 0x65, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x73, 0x42, 0x6c, 0x6f, 0x6f, 0x6d, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x73, 0x42, 0x6c, 0x6f, 0x6f, 0x6d, 0x12, 0x2c, 0x0a,
	0x11, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61,
	0x73, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f,
	0x75, 0x73, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x67,
	0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x67,
	0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x61, 0x73, 0x55, 0x73,
	0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x67, 0x61, 0x73, 0x55, 0x73, 0x65,
	0x64, 0x22, 0x3d, 0x0a, 0x0f, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x22, 0xe7, 0x01, 0x0a, 0x0b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x65,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0c, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x6e, 0x75, 0x6d, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0a, 0x6e, 0x75, 0x6d, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1e,
	0x0a, 0x0a, 0x69, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x2a,
	0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x42, 0x79, 0x74, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x42, 0x79, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x66, 0x0a, 0x0a, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x27, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x69, 0x6f, 0x74, 0x65, 0x78, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x05, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x12, 0x2f, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x6f, 0x74, 0x65, 0x78, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70,
	0x74, 0x73, 0x22, 0x47, 0x0a, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x73, 0x12, 0x38, 0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x69, 0x6f, 0x74, 0x65, 0x78, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x0b,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x42, 0x5d, 0x0a, 0x22, 0x63,
	0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x69, 0x6f, 0x74, 0x65, 0x78, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x50, 0x01, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x69, 0x6f, 0x74, 0x65, 0x78, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x69, 0x6f, 0x74,
	0x65, 0x78, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2f,
	0x69, 0x6f, 0x74, 0x65, 0x78, 0x74, 0x79, 0x70, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_proto_types_blockchain_proto_rawDescOnce sync.Once
	file_proto_types_blockchain_proto_rawDescData = file_proto_types_blockchain_proto_rawDesc
)

func file_proto_types_blockchain_proto_rawDescGZIP() []byte {
	file_proto_types_blockchain_proto_rawDescOnce.Do(func() {
		file_proto_types_blockchain_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_types_blockchain_proto_rawDescData)
	})
	return file_proto_types_blockchain_proto_rawDescData
}

var file_proto_types_blockchain_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_proto_types_blockchain_proto_goTypes = []any{
	(*BlockHeader)(nil),           // 0: iotextypes.BlockHeader
	(*BlockHeaderCore)(nil),       // 1: iotextypes.BlockHeaderCore
	(*BlockFooter)(nil),           // 2: iotextypes.BlockFooter
	(*BlockBody)(nil),             // 3: iotextypes.BlockBody
	(*Block)(nil),                 // 4: iotextypes.Block
	(*Receipts)(nil),              // 5: iotextypes.Receipts
	(*EpochData)(nil),             // 6: iotextypes.EpochData
	(*ChainMeta)(nil),             // 7: iotextypes.ChainMeta
	(*BlockMeta)(nil),             // 8: iotextypes.BlockMeta
	(*BlockIdentifier)(nil),       // 9: iotextypes.BlockIdentifier
	(*AccountMeta)(nil),           // 10: iotextypes.AccountMeta
	(*BlockStore)(nil),            // 11: iotextypes.BlockStore
	(*BlockStores)(nil),           // 12: iotextypes.BlockStores
	(*timestamppb.Timestamp)(nil), // 13: google.protobuf.Timestamp
	(*Endorsement)(nil),           // 14: iotextypes.Endorsement
	(*Action)(nil),                // 15: iotextypes.Action
	(*Receipt)(nil),               // 16: iotextypes.Receipt
}
var file_proto_types_blockchain_proto_depIdxs = []int32{
	1,  // 0: iotextypes.BlockHeader.core:type_name -> iotextypes.BlockHeaderCore
	13, // 1: iotextypes.BlockHeaderCore.timestamp:type_name -> google.protobuf.Timestamp
	14, // 2: iotextypes.BlockFooter.endorsements:type_name -> iotextypes.Endorsement
	13, // 3: iotextypes.BlockFooter.timestamp:type_name -> google.protobuf.Timestamp
	15, // 4: iotextypes.BlockBody.actions:type_name -> iotextypes.Action
	0,  // 5: iotextypes.Block.header:type_name -> iotextypes.BlockHeader
	3,  // 6: iotextypes.Block.body:type_name -> iotextypes.BlockBody
	2,  // 7: iotextypes.Block.footer:type_name -> iotextypes.BlockFooter
	16, // 8: iotextypes.Receipts.receipts:type_name -> iotextypes.Receipt
	6,  // 9: iotextypes.ChainMeta.epoch:type_name -> iotextypes.EpochData
	13, // 10: iotextypes.BlockMeta.timestamp:type_name -> google.protobuf.Timestamp
	4,  // 11: iotextypes.BlockStore.block:type_name -> iotextypes.Block
	16, // 12: iotextypes.BlockStore.receipts:type_name -> iotextypes.Receipt
	11, // 13: iotextypes.BlockStores.blockStores:type_name -> iotextypes.BlockStore
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_proto_types_blockchain_proto_init() }
func file_proto_types_blockchain_proto_init() {
	if File_proto_types_blockchain_proto != nil {
		return
	}
	file_proto_types_action_proto_init()
	file_proto_types_endorsement_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proto_types_blockchain_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*BlockHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_blockchain_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*BlockHeaderCore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_blockchain_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*BlockFooter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_blockchain_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*BlockBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_blockchain_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*Block); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_blockchain_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*Receipts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_blockchain_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*EpochData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_blockchain_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*ChainMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_blockchain_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*BlockMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_blockchain_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*BlockIdentifier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_blockchain_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*AccountMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_blockchain_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*BlockStore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_blockchain_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*BlockStores); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_types_blockchain_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_types_blockchain_proto_goTypes,
		DependencyIndexes: file_proto_types_blockchain_proto_depIdxs,
		MessageInfos:      file_proto_types_blockchain_proto_msgTypes,
	}.Build()
	File_proto_types_blockchain_proto = out.File
	file_proto_types_blockchain_proto_rawDesc = nil
	file_proto_types_blockchain_proto_goTypes = nil
	file_proto_types_blockchain_proto_depIdxs = nil
}
