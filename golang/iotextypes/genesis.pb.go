// Copyright (c) 2019 IoTeX
// This is an alpha (internal) release and is not suitable for production. This source code is provided 'as is' and no
// warranties are given as to title or non-infringement, merchantability or fitness for purpose and, to the extent
// permitted by law, all liability for your use of the code is disclaimed. This source code is governed by Apache
// License 2.0 that can be found in the LICENSE file.

// To compile the proto, run:
//      protoc --go_out=plugins=grpc:$GOPATH/src *.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.1
// source: proto/types/genesis.proto

package iotextypes

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Genesis struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Blockchain *GenesisBlockchain `protobuf:"bytes,1,opt,name=blockchain,proto3" json:"blockchain,omitempty"`
	Account    *GenesisAccount    `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	Poll       *GenesisPoll       `protobuf:"bytes,3,opt,name=poll,proto3" json:"poll,omitempty"`
	Rewarding  *GenesisRewarding  `protobuf:"bytes,4,opt,name=rewarding,proto3" json:"rewarding,omitempty"`
}

func (x *Genesis) Reset() {
	*x = Genesis{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_genesis_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Genesis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Genesis) ProtoMessage() {}

func (x *Genesis) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_genesis_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Genesis.ProtoReflect.Descriptor instead.
func (*Genesis) Descriptor() ([]byte, []int) {
	return file_proto_types_genesis_proto_rawDescGZIP(), []int{0}
}

func (x *Genesis) GetBlockchain() *GenesisBlockchain {
	if x != nil {
		return x.Blockchain
	}
	return nil
}

func (x *Genesis) GetAccount() *GenesisAccount {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *Genesis) GetPoll() *GenesisPoll {
	if x != nil {
		return x.Poll
	}
	return nil
}

func (x *Genesis) GetRewarding() *GenesisRewarding {
	if x != nil {
		return x.Rewarding
	}
	return nil
}

type GenesisBlockchain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp             int64  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	BlockGasLimit         uint64 `protobuf:"varint,2,opt,name=blockGasLimit,proto3" json:"blockGasLimit,omitempty"`
	ActionGasLimit        uint64 `protobuf:"varint,3,opt,name=actionGasLimit,proto3" json:"actionGasLimit,omitempty"`
	BlockInterval         int64  `protobuf:"varint,4,opt,name=blockInterval,proto3" json:"blockInterval,omitempty"`
	NumSubEpochs          uint64 `protobuf:"varint,5,opt,name=numSubEpochs,proto3" json:"numSubEpochs,omitempty"`
	NumDelegates          uint64 `protobuf:"varint,6,opt,name=numDelegates,proto3" json:"numDelegates,omitempty"`
	NumCandidateDelegates uint64 `protobuf:"varint,7,opt,name=numCandidateDelegates,proto3" json:"numCandidateDelegates,omitempty"`
	TimeBasedRotation     bool   `protobuf:"varint,8,opt,name=timeBasedRotation,proto3" json:"timeBasedRotation,omitempty"`
}

func (x *GenesisBlockchain) Reset() {
	*x = GenesisBlockchain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_genesis_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenesisBlockchain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenesisBlockchain) ProtoMessage() {}

func (x *GenesisBlockchain) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_genesis_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenesisBlockchain.ProtoReflect.Descriptor instead.
func (*GenesisBlockchain) Descriptor() ([]byte, []int) {
	return file_proto_types_genesis_proto_rawDescGZIP(), []int{1}
}

func (x *GenesisBlockchain) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *GenesisBlockchain) GetBlockGasLimit() uint64 {
	if x != nil {
		return x.BlockGasLimit
	}
	return 0
}

func (x *GenesisBlockchain) GetActionGasLimit() uint64 {
	if x != nil {
		return x.ActionGasLimit
	}
	return 0
}

func (x *GenesisBlockchain) GetBlockInterval() int64 {
	if x != nil {
		return x.BlockInterval
	}
	return 0
}

func (x *GenesisBlockchain) GetNumSubEpochs() uint64 {
	if x != nil {
		return x.NumSubEpochs
	}
	return 0
}

func (x *GenesisBlockchain) GetNumDelegates() uint64 {
	if x != nil {
		return x.NumDelegates
	}
	return 0
}

func (x *GenesisBlockchain) GetNumCandidateDelegates() uint64 {
	if x != nil {
		return x.NumCandidateDelegates
	}
	return 0
}

func (x *GenesisBlockchain) GetTimeBasedRotation() bool {
	if x != nil {
		return x.TimeBasedRotation
	}
	return false
}

type GenesisAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InitBalanceAddrs []string `protobuf:"bytes,1,rep,name=initBalanceAddrs,proto3" json:"initBalanceAddrs,omitempty"`
	InitBalances     []string `protobuf:"bytes,2,rep,name=initBalances,proto3" json:"initBalances,omitempty"`
}

func (x *GenesisAccount) Reset() {
	*x = GenesisAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_genesis_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenesisAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenesisAccount) ProtoMessage() {}

func (x *GenesisAccount) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_genesis_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenesisAccount.ProtoReflect.Descriptor instead.
func (*GenesisAccount) Descriptor() ([]byte, []int) {
	return file_proto_types_genesis_proto_rawDescGZIP(), []int{2}
}

func (x *GenesisAccount) GetInitBalanceAddrs() []string {
	if x != nil {
		return x.InitBalanceAddrs
	}
	return nil
}

func (x *GenesisAccount) GetInitBalances() []string {
	if x != nil {
		return x.InitBalances
	}
	return nil
}

type GenesisPoll struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnableGravityChainVoting bool               `protobuf:"varint,1,opt,name=enableGravityChainVoting,proto3" json:"enableGravityChainVoting,omitempty"`
	GravityChainStartHeight  uint64             `protobuf:"varint,2,opt,name=gravityChainStartHeight,proto3" json:"gravityChainStartHeight,omitempty"`
	RegisterContractAddress  string             `protobuf:"bytes,3,opt,name=registerContractAddress,proto3" json:"registerContractAddress,omitempty"`
	StakingContractAddress   string             `protobuf:"bytes,4,opt,name=stakingContractAddress,proto3" json:"stakingContractAddress,omitempty"`
	VoteThreshold            string             `protobuf:"bytes,5,opt,name=voteThreshold,proto3" json:"voteThreshold,omitempty"`
	ScoreThreshold           string             `protobuf:"bytes,6,opt,name=scoreThreshold,proto3" json:"scoreThreshold,omitempty"`
	SelfStakingThreshold     string             `protobuf:"bytes,7,opt,name=selfStakingThreshold,proto3" json:"selfStakingThreshold,omitempty"`
	Delegates                []*GenesisDelegate `protobuf:"bytes,8,rep,name=delegates,proto3" json:"delegates,omitempty"`
}

func (x *GenesisPoll) Reset() {
	*x = GenesisPoll{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_genesis_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenesisPoll) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenesisPoll) ProtoMessage() {}

func (x *GenesisPoll) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_genesis_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenesisPoll.ProtoReflect.Descriptor instead.
func (*GenesisPoll) Descriptor() ([]byte, []int) {
	return file_proto_types_genesis_proto_rawDescGZIP(), []int{3}
}

func (x *GenesisPoll) GetEnableGravityChainVoting() bool {
	if x != nil {
		return x.EnableGravityChainVoting
	}
	return false
}

func (x *GenesisPoll) GetGravityChainStartHeight() uint64 {
	if x != nil {
		return x.GravityChainStartHeight
	}
	return 0
}

func (x *GenesisPoll) GetRegisterContractAddress() string {
	if x != nil {
		return x.RegisterContractAddress
	}
	return ""
}

func (x *GenesisPoll) GetStakingContractAddress() string {
	if x != nil {
		return x.StakingContractAddress
	}
	return ""
}

func (x *GenesisPoll) GetVoteThreshold() string {
	if x != nil {
		return x.VoteThreshold
	}
	return ""
}

func (x *GenesisPoll) GetScoreThreshold() string {
	if x != nil {
		return x.ScoreThreshold
	}
	return ""
}

func (x *GenesisPoll) GetSelfStakingThreshold() string {
	if x != nil {
		return x.SelfStakingThreshold
	}
	return ""
}

func (x *GenesisPoll) GetDelegates() []*GenesisDelegate {
	if x != nil {
		return x.Delegates
	}
	return nil
}

type GenesisDelegate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperatorAddr string `protobuf:"bytes,1,opt,name=operatorAddr,proto3" json:"operatorAddr,omitempty"`
	RewardAddr   string `protobuf:"bytes,2,opt,name=rewardAddr,proto3" json:"rewardAddr,omitempty"`
	Votes        string `protobuf:"bytes,3,opt,name=votes,proto3" json:"votes,omitempty"`
}

func (x *GenesisDelegate) Reset() {
	*x = GenesisDelegate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_genesis_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenesisDelegate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenesisDelegate) ProtoMessage() {}

func (x *GenesisDelegate) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_genesis_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenesisDelegate.ProtoReflect.Descriptor instead.
func (*GenesisDelegate) Descriptor() ([]byte, []int) {
	return file_proto_types_genesis_proto_rawDescGZIP(), []int{4}
}

func (x *GenesisDelegate) GetOperatorAddr() string {
	if x != nil {
		return x.OperatorAddr
	}
	return ""
}

func (x *GenesisDelegate) GetRewardAddr() string {
	if x != nil {
		return x.RewardAddr
	}
	return ""
}

func (x *GenesisDelegate) GetVotes() string {
	if x != nil {
		return x.Votes
	}
	return ""
}

type GenesisRewarding struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InitAdminAddr                  string `protobuf:"bytes,1,opt,name=initAdminAddr,proto3" json:"initAdminAddr,omitempty"`
	InitBalance                    string `protobuf:"bytes,2,opt,name=initBalance,proto3" json:"initBalance,omitempty"`
	BlockReward                    string `protobuf:"bytes,3,opt,name=blockReward,proto3" json:"blockReward,omitempty"`
	EpochReward                    string `protobuf:"bytes,4,opt,name=epochReward,proto3" json:"epochReward,omitempty"`
	NumDelegatesForEpochReward     uint64 `protobuf:"varint,5,opt,name=numDelegatesForEpochReward,proto3" json:"numDelegatesForEpochReward,omitempty"`
	FoundationBonus                string `protobuf:"bytes,6,opt,name=foundationBonus,proto3" json:"foundationBonus,omitempty"`
	NumDelegatesForFoundationBonus uint64 `protobuf:"varint,7,opt,name=numDelegatesForFoundationBonus,proto3" json:"numDelegatesForFoundationBonus,omitempty"`
	FoundationBonusLastEpoch       uint64 `protobuf:"varint,8,opt,name=foundationBonusLastEpoch,proto3" json:"foundationBonusLastEpoch,omitempty"`
	ProductivityThreshold          uint64 `protobuf:"varint,9,opt,name=productivityThreshold,proto3" json:"productivityThreshold,omitempty"`
}

func (x *GenesisRewarding) Reset() {
	*x = GenesisRewarding{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_types_genesis_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenesisRewarding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenesisRewarding) ProtoMessage() {}

func (x *GenesisRewarding) ProtoReflect() protoreflect.Message {
	mi := &file_proto_types_genesis_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenesisRewarding.ProtoReflect.Descriptor instead.
func (*GenesisRewarding) Descriptor() ([]byte, []int) {
	return file_proto_types_genesis_proto_rawDescGZIP(), []int{5}
}

func (x *GenesisRewarding) GetInitAdminAddr() string {
	if x != nil {
		return x.InitAdminAddr
	}
	return ""
}

func (x *GenesisRewarding) GetInitBalance() string {
	if x != nil {
		return x.InitBalance
	}
	return ""
}

func (x *GenesisRewarding) GetBlockReward() string {
	if x != nil {
		return x.BlockReward
	}
	return ""
}

func (x *GenesisRewarding) GetEpochReward() string {
	if x != nil {
		return x.EpochReward
	}
	return ""
}

func (x *GenesisRewarding) GetNumDelegatesForEpochReward() uint64 {
	if x != nil {
		return x.NumDelegatesForEpochReward
	}
	return 0
}

func (x *GenesisRewarding) GetFoundationBonus() string {
	if x != nil {
		return x.FoundationBonus
	}
	return ""
}

func (x *GenesisRewarding) GetNumDelegatesForFoundationBonus() uint64 {
	if x != nil {
		return x.NumDelegatesForFoundationBonus
	}
	return 0
}

func (x *GenesisRewarding) GetFoundationBonusLastEpoch() uint64 {
	if x != nil {
		return x.FoundationBonusLastEpoch
	}
	return 0
}

func (x *GenesisRewarding) GetProductivityThreshold() uint64 {
	if x != nil {
		return x.ProductivityThreshold
	}
	return 0
}

var File_proto_types_genesis_proto protoreflect.FileDescriptor

var file_proto_types_genesis_proto_rawDesc = []byte{
	0x0a, 0x19, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x67, 0x65,
	0x6e, 0x65, 0x73, 0x69, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x69, 0x6f, 0x74,
	0x65, 0x78, 0x74, 0x79, 0x70, 0x65, 0x73, 0x22, 0xe7, 0x01, 0x0a, 0x07, 0x47, 0x65, 0x6e, 0x65,
	0x73, 0x69, 0x73, 0x12, 0x3d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x69, 0x6f, 0x74, 0x65, 0x78, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x52, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x12, 0x34, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x69, 0x6f, 0x74, 0x65, 0x78, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x47, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x04, 0x70, 0x6f, 0x6c, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x69, 0x6f, 0x74, 0x65, 0x78, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x50, 0x6f, 0x6c, 0x6c, 0x52,
	0x04, 0x70, 0x6f, 0x6c, 0x6c, 0x12, 0x3a, 0x0a, 0x09, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x69,
	0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x69, 0x6f, 0x74, 0x65, 0x78,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x09, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e,
	0x67, 0x22, 0xd1, 0x02, 0x0a, 0x11, 0x47, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x24, 0x0a, 0x0d, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x47, 0x61,
	0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x47, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x61, 0x73, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x6e, 0x75, 0x6d,
	0x53, 0x75, 0x62, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0c, 0x6e, 0x75, 0x6d, 0x53, 0x75, 0x62, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x73, 0x12, 0x22, 0x0a,
	0x0c, 0x6e, 0x75, 0x6d, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0c, 0x6e, 0x75, 0x6d, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x73, 0x12, 0x34, 0x0a, 0x15, 0x6e, 0x75, 0x6d, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x15, 0x6e, 0x75, 0x6d, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65,
	0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x74, 0x69, 0x6d, 0x65, 0x42,
	0x61, 0x73, 0x65, 0x64, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x11, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x61, 0x73, 0x65, 0x64, 0x52, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x60, 0x0a, 0x0e, 0x47, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x69, 0x6e, 0x69, 0x74, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x64, 0x64, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x10, 0x69, 0x6e, 0x69, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x64,
	0x64, 0x72, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x69, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x69, 0x74, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x22, 0xb2, 0x03, 0x0a, 0x0b, 0x47, 0x65, 0x6e, 0x65,
	0x73, 0x69, 0x73, 0x50, 0x6f, 0x6c, 0x6c, 0x12, 0x3a, 0x0a, 0x18, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x47, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x56, 0x6f, 0x74,
	0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x18, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x47, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x56, 0x6f, 0x74,
	0x69, 0x6e, 0x67, 0x12, 0x38, 0x0a, 0x17, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x43, 0x68,
	0x61, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x17, 0x67, 0x72, 0x61, 0x76, 0x69, 0x74, 0x79, 0x43, 0x68, 0x61,
	0x69, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x38, 0x0a,
	0x17, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x36, 0x0a, 0x16, 0x73, 0x74, 0x61, 0x6b, 0x69,
	0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x24, 0x0a, 0x0d, 0x76, 0x6f, 0x74, 0x65, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x76, 0x6f, 0x74, 0x65, 0x54, 0x68, 0x72, 0x65,
	0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x54, 0x68,
	0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x32, 0x0a,
	0x14, 0x73, 0x65, 0x6c, 0x66, 0x53, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x54, 0x68, 0x72, 0x65,
	0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x73, 0x65, 0x6c,
	0x66, 0x53, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c,
	0x64, 0x12, 0x39, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x73, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x69, 0x6f, 0x74, 0x65, 0x78, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x73, 0x22, 0x6b, 0x0a, 0x0f,
	0x47, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x41,
	0x64, 0x64, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x41, 0x64, 0x64,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x41,
	0x64, 0x64, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x6f, 0x74, 0x65, 0x73, 0x22, 0xc2, 0x03, 0x0a, 0x10, 0x47, 0x65,
	0x6e, 0x65, 0x73, 0x69, 0x73, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x24,
	0x0a, 0x0d, 0x69, 0x6e, 0x69, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x69, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x41, 0x64, 0x64, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x69, 0x74, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x69, 0x74, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x70, 0x6f, 0x63,
	0x68, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65,
	0x70, 0x6f, 0x63, 0x68, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x3e, 0x0a, 0x1a, 0x6e, 0x75,
	0x6d, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x45, 0x70, 0x6f,
	0x63, 0x68, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1a,
	0x6e, 0x75, 0x6d, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x45,
	0x70, 0x6f, 0x63, 0x68, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x66, 0x6f,
	0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x6f, 0x6e, 0x75, 0x73, 0x12, 0x46, 0x0a, 0x1e, 0x6e, 0x75, 0x6d, 0x44, 0x65, 0x6c, 0x65, 0x67,
	0x61, 0x74, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1e, 0x6e, 0x75,
	0x6d, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x46, 0x6f, 0x75,
	0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x12, 0x3a, 0x0a, 0x18,
	0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x4c,
	0x61, 0x73, 0x74, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x18,
	0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x4c,
	0x61, 0x73, 0x74, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x34, 0x0a, 0x15, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x15, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x42, 0x5d,
	0x0a, 0x22, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x69, 0x6f, 0x74,
	0x65, 0x78, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x50, 0x01, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x69, 0x6f, 0x74, 0x65, 0x78, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f,
	0x69, 0x6f, 0x74, 0x65, 0x78, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6c, 0x61,
	0x6e, 0x67, 0x2f, 0x69, 0x6f, 0x74, 0x65, 0x78, 0x74, 0x79, 0x70, 0x65, 0x73, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_types_genesis_proto_rawDescOnce sync.Once
	file_proto_types_genesis_proto_rawDescData = file_proto_types_genesis_proto_rawDesc
)

func file_proto_types_genesis_proto_rawDescGZIP() []byte {
	file_proto_types_genesis_proto_rawDescOnce.Do(func() {
		file_proto_types_genesis_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_types_genesis_proto_rawDescData)
	})
	return file_proto_types_genesis_proto_rawDescData
}

var file_proto_types_genesis_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_proto_types_genesis_proto_goTypes = []any{
	(*Genesis)(nil),           // 0: iotextypes.Genesis
	(*GenesisBlockchain)(nil), // 1: iotextypes.GenesisBlockchain
	(*GenesisAccount)(nil),    // 2: iotextypes.GenesisAccount
	(*GenesisPoll)(nil),       // 3: iotextypes.GenesisPoll
	(*GenesisDelegate)(nil),   // 4: iotextypes.GenesisDelegate
	(*GenesisRewarding)(nil),  // 5: iotextypes.GenesisRewarding
}
var file_proto_types_genesis_proto_depIdxs = []int32{
	1, // 0: iotextypes.Genesis.blockchain:type_name -> iotextypes.GenesisBlockchain
	2, // 1: iotextypes.Genesis.account:type_name -> iotextypes.GenesisAccount
	3, // 2: iotextypes.Genesis.poll:type_name -> iotextypes.GenesisPoll
	5, // 3: iotextypes.Genesis.rewarding:type_name -> iotextypes.GenesisRewarding
	4, // 4: iotextypes.GenesisPoll.delegates:type_name -> iotextypes.GenesisDelegate
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_proto_types_genesis_proto_init() }
func file_proto_types_genesis_proto_init() {
	if File_proto_types_genesis_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_types_genesis_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Genesis); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_genesis_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*GenesisBlockchain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_genesis_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GenesisAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_genesis_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GenesisPoll); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_genesis_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GenesisDelegate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_types_genesis_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*GenesisRewarding); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_types_genesis_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_types_genesis_proto_goTypes,
		DependencyIndexes: file_proto_types_genesis_proto_depIdxs,
		MessageInfos:      file_proto_types_genesis_proto_msgTypes,
	}.Build()
	File_proto_types_genesis_proto = out.File
	file_proto_types_genesis_proto_rawDesc = nil
	file_proto_types_genesis_proto_goTypes = nil
	file_proto_types_genesis_proto_depIdxs = nil
}
