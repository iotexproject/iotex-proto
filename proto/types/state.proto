// Copyright (c) 2018 IoTeX
// This is an alpha (internal) release and is not suitable for production. This source code is provided 'as is' and no
// warranties are given as to title or non-infringement, merchantability or fitness for purpose and, to the extent
// permitted by law, all liability for your use of the code is disclaimed. This source code is governed by Apache
// License 2.0 that can be found in the LICENSE file.

// To compile the proto, run:
//      protoc --go_out=plugins=grpc:$GOPATH/src *.proto
syntax = "proto3";
package iotextypes;
option go_package = "github.com/iotexproject/iotex-proto/golang/iotextypes";

import "google/protobuf/timestamp.proto";

message KickoutInfo {
  string address = 1;
  uint32 count = 2;
}

// KickoutInfo and list of KickoutCandidateList
message KickoutCandidateList {
  repeated KickoutInfo blacklists = 1;
  uint32 intensityRate = 2;
}

message VoteBucket {
  string candidateAddress = 1;
  string stakedAmount = 2;
  uint32 stakedDuration = 3;
  google.protobuf.Timestamp createTime = 4;
  google.protobuf.Timestamp stakeStartTime = 5;
  google.protobuf.Timestamp unstakeStartTime = 6;
  bool autoStake = 7;
  string owner = 8;
}

message CandidateV2 {
  string ownerAddress = 1;
  string operatorAddress = 2;
  string rewardAddress = 3;
  string name = 4;
  string totalWeightedVotes = 5;
  uint64 selfStakeBucketIdx = 6;
  string selfStakingTokens = 7;
}

message CandidateListV2 {
	repeated CandidateV2 candidates = 1;
}

message VoteBucketList {
	repeated VoteBucket buckets = 1;
}

message ReadStakingData {
	oneof request {
		ReadStakingVoteBuckets getBuckets = 1;
		ReadStakingVoteBucketsByVoter getBucketsByVoter = 2;
		ReadStakingVoteBucketsByCandidate getBucketsByCandidate = 3;
		ReadStakingCandidates getCandidates = 4;
		ReadStakingCandidateByName getCandidateByName = 5;
	}
}

message ReadStakingVoteBuckets {
	uint32 offset = 1;
	uint32 limit = 2;
}

message ReadStakingVoteBucketsByVoter {
	string voterAddress = 1;
	uint32 offset = 2;
	uint32 limit = 3;
}

message ReadStakingVoteBucketsByCandidate {
	string candName = 1;
	uint32 offset = 2;
	uint32 limit = 3;
}

message ReadStakingCandidates {
	uint32 offset = 1;
	uint32 limit = 2;
}

message ReadStakingCandidateByName {
	string candName = 1;
}
